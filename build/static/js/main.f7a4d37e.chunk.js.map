{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","searchKey","handleSearchKeyChange","value","onChange","Notification","message","className","status","PersonForm","addPerson","newName","handleNewNameChange","newNumber","handleNewNumberChange","onSubmit","type","Persons","showPersons","deletePerson","map","person","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchKey","notification","setNotification","useEffect","personService","initialPersons","filter","console","log","toLowerCase","indexOf","notificationMessage","setTimeout","event","target","preventDefault","find","window","confirm","returnedPerson","catch","error","concat","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7a4d37e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchKey, handleSearchKeyChange}) => \r\n  <p>filter show with <input value={searchKey} onChange={handleSearchKeyChange} /></p>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message.message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className={message.status}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNewNameChange, newNumber, handleNewNumberChange }) =>\r\n  <form  onSubmit={addPerson}>\r\n  <div>\r\n    name: <input value={newName} onChange={handleNewNameChange} />\r\n  </div>\r\n  <div>\r\n    number: <input value={newNumber} onChange={handleNewNumberChange} />\r\n  </div>\r\n  <div>\r\n    <button type=\"submit\">add</button>\r\n  </div>\r\n  </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({showPersons, deletePerson}) => {\r\n  return (\r\n    showPersons.map(person => \r\n      <p key={person.name}>\r\n        {person.name} {person.number}\r\n        <button onClick={() => deletePerson(person.id)}>delete</button>\r\n      </p>)\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = 'https://hidden-cliffs-85046.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchKey, setSearchKey ] = useState('')\n  const [ notification, setNotification] = useState({ status: null, message: null})\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const showPersons = persons.filter(person => {\n    if(searchKey === '') return true\n    console.log(person.name.toLowerCase(), searchKey.toLowerCase())\n    return person.name.toLowerCase().indexOf(searchKey.toLowerCase()) !== -1\n  })\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchKeyChange = (event) => {\n    setSearchKey(event.target.value)\n\n  }\n\n  const notificationMessage = (status, message) => {\n    setNotification({status: status, message: message})\n    setTimeout(() => {\n      setNotification({status: null, message: null})\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const target = persons.find(person => person.name === newName)\n    if(target)\n    {\n      if(window.confirm(`${target.name} is already added to phonebook, replace the old number with a new one?`)){\n        personService\n          .update(target.id, {...target, number: newNumber})\n          .then(returnedPerson => {\n            notificationMessage(\"info\", `Updated ${returnedPerson.name}'s number ${target.number} -> ${returnedPerson.number}`)\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n          })\n          .catch((error) => {\n            notificationMessage(\"error\", `Infomation of ${target.name} has already been removed from server`)\n          })\n      }\n    } else {\n      personService\n        .create({ name: newName, number: newNumber})\n        .then(returnedPerson => {\n          notificationMessage(\"info\", `Added ${returnedPerson.name}`)\n          setPersons(persons.concat(returnedPerson))\n        })\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const deletePerson = id => {\n    const target = persons.find(person => person.id === id)\n    if(window.confirm(`Delete ${target.name} ?`)){\n      personService\n        .remove(id)\n        .then(removedPerson => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter\n        searchKey={searchKey}\n        handleSearchKeyChange={handleSearchKeyChange}\n      />\n\n      <h3>add a new</h3>\n\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNewNameChange={handleNewNameChange}\n        newNumber={newNumber}\n        handleNewNumberChange={handleNewNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons showPersons={showPersons} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}